//******************************************
//* HW#3 Problem  a and b                **
//******************************************


/**************************************************************************************
We initialize semaphore varaibles ADone with 1 and BDone with 0. Because of wait 
process B is locked while A can run just once. At the end of process A the key for B is 
released and B can run once. After that ADone is signalled twice and process A runs two 
more times at the end of process B.
**************************************************************************************/


semaphore ADone;  
semaphore BDone;

////////////////////////////////////////////
void A() 
{
   wait(ADone);
   cout << "A";
   signal(BDone);
   
}

////////////////////////////////////////////
void B() 
{
    wait(BDone);
    cout << "B";
    signal(ADone);
    signal(ADone);  
}

////////////////////////////////////////////
main() 
{
	initialsem(ADone, 1);
	initialsem(BDone, 0);

    cobegin 
    {
       A();
       A();
       A();
       B();
    }
     cout << endl;
}
